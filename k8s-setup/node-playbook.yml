---
- hosts: all
  become: true
  tasks:
    # https://kubernetes.io/blog/2019/03/15/kubernetes-setup-using-ansible-and-vagrant/
    # Step 3.1 : Copy Steps 2.1 to 2.3

    - name: Install packages to allow apt over https
      apt:
        state: present
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common

    - name: Add key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable Docker version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Install docker
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        update_cache: yes
      notify:
        - docker status

    # Fixing errors: Docker is currently using cgroupfs and that is not recommended

    - name: Change Docker to use systemd and not cgroupfs
      lineinfile:
        path: /lib/systemd/system/docker.service
        regexp: '^ExecStart=/usr/bin/dockerd'
        line: ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock â€“-exec-opt native.cgroupdriver=systemd
    
    - name: Restart docker service
      systemd:
        name: docker
        daemon_reload: yes
        state: restarted
    
    - name: Add vagrant user to docker group
      user:
        name: vagrant
        group: docker

    # Step 2.2: Kubelet will not start if the system has swap enabled,
    # so we are disabling swap using the below code.

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    # Step 2.3: Installing kubelet, kubeadm and kubectl using the below code.

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      apt:
        state: present
        update_cache: yes
        pkg:
          - kubelet
          - kubeadm
          - kubectl

    - name: Configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
        create: yes

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted
        
    # Configure kublet to use systemd
#    - name: Change kubelet to use systemd and not cgroupfs
#      lineinfile:
#        path: /var/lib/kubelet/config.yaml
#        regexp: '^cgroupDriver: cgroupfs'
#        line: 'cgroupDriver: systemd'

#    - name: Restart kubelet
#      service:
#        name: kubelet
#        daemon_reload: yes
#        state: restarted

    # Step 3.2: Join the nodes to the Kubernetes cluster using below code. 

    - name: Copy the join command to server location
      copy: 
        src: join-command 
        dest: /tmp/join-command.sh 
        mode: 0777

    - name: Join the node to cluster
      command: sh /tmp/join-command.sh

    # Step 3.3: Add the code from step 2.7 to finish this playbook. 

  handlers:
    - name: docker status
      service:
        name: docker
        state: started

